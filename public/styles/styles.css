@import url("https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

html {
  box-sizing: border-box;
  background: #f5f7fa;
}
*,
*:before,
*:after {
  box-sizing: inherit;
}

body {
  font-family: "Inter", sans-serif;
  font-size: 16px;
  margin: 0;
  padding: 0;
  overflow: hidden !important;
  overflow-y: auto !important;
  max-height: 100vh !important;
  max-height: 100dvh !important;
  min-height: 100dvh !important;
  display: flex;
  flex-direction: column;
}

main {
  flex: 1;
}

h1,
h2,
h3,
h4,
h5,
p {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5 {
  line-height: 1.1 !important;
  text-wrap: balance;
}

p {
  line-height: 1.5;
}

p,
li {
  text-wrap: pretty;
  max-width: 65ch;
}
a {
  text-decoration: none;
  color: inherit;
}

dialog {
  --duration: 150ms;
  --start-opacity: 0.5;
  --start-scale: scale(0.8);

  border: none;
  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),
    0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);
  padding: 0;

  /* End values for fade out. */
  opacity: var(--start-opacity);
  transform: var(--start-scale);
  transition: opacity var(--duration) ease-out,
    transform var(--duration) cubic-bezier(0, 0, 0.2, 1),
    overlay var(--duration) allow-discrete,
    display var(--duration) allow-discrete;
}

dialog[open] {
  /* End values for fade in; start values for fade out. */
  opacity: 1;
  transform: scale(1);

  @starting-style {
    /* Start values vor fade in. */
    opacity: var(--start-opacity);
    transform: var(--start-scale);
  }
}
/* Styling for backdrop behind the dialog */
dialog::backdrop {
  background: rgb(0 0 0 / 0.32);
  /* End value for fade out. */
  opacity: 0;
  transition: opacity var(--duration), overlay var(--duration) allow-discrete,
    display var(--duration) allow-discrete;
}

dialog[open]::backdrop {
  /* End value for fade in; start value for fade out. */
  opacity: 1;
}

/* This starting-style rule cannot be nested inside the above selector because the nesting selector cannot represent pseudo-elements. */
@starting-style {
  dialog[open]::backdrop {
    /* Start value vor fade in. */
    opacity: 0;
  }
}

#upload-file-list li {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px;
  margin-top: 5px;
  background: #fff;
  border-radius: 5px;
  border: 1px solid #ddd;
  font-size: 14px;
  color: #333;
  width: 100%;
}

/* Remove Button */
#upload-file-list li button {
  background: transparent;
  color: #dc3545;
  border: none;
  padding: 4px;
  border-radius: 5px;
  cursor: pointer;
}

#upload-file-list li button:hover {
  color: #c82333;
}

/* Progress Bar Styles */
.progress-container {
  max-width: 28px;
  width: 100%;
  height: 5px;
  background-color: #ddd;
  border-radius: 3px;
  margin-top: 5px;
}

.progress-bar {
  height: 100%;
  width: 0%;
  border-radius: 3px;
  background-color: #28a745;
  transition: width 0.3s ease;
}

.progress-bar.completed {
  position: relative;
  background-color: #28a745;
  width: 100%;
  border-radius: 3px;
}

.progress-bar.completed::after {
  /* add a checkmark icon */
  content: "âœ“";
  position: absolute;
  right: -14px;
  top: 0;
  color: #28a745;
  text-align: center;
  font-size: 1em;
  font-weight: bold;
}
.progress-bar.uploading {
  background-color: #007bff;
}

.progress-bar.pending {
  background-color: #ffc107;
  width: 0%;
}

.progress-bar.error {
  background-color: #dc3545;
  width: 0%;
}

/* when status is pending, hide the progress bar */
.status.pending ~ .progress-container {
  width: 0px !important;
}

/* when status is completed, hide the delete button */
.status.completed ~ .remove-file-btn {
  display: none !important;
}
